---
import QuestionIcon from '@icons/Question.astro';
import GalleryIcon from '@icons/Gallery.astro';
import PromptIcon from '@icons/Prompt.astro';
import CopyIcon from '@icons/Copy.astro';
---

<section class="min-h-[full] mt-4 p-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 sm:p-6 dark:bg-gray-800">
    <div class="flex items-center justify-center w-full">
        <label for="dropzone-file" class="flex flex-col items-center justify-center w-full h-full max-h-[600px] border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600 overflow-hidden">
            <div id="dropzone-content" class="flex flex-col items-center justify-center pt-5 pb-6">
                <GalleryIcon class="w-12 h-12 text-gray-400 dark:text-gray-500" />
                <p class="my-2 text-md text-gray-500 dark:text-gray-400">
                    <span class="font-semibold">Click to upload</span> or drag and drop
                </p>
                <p class="text-xs text-gray-500 dark:text-gray-400">PNG, JPEG or JPG</p>
            </div>
            <input id="dropzone-file" type="file" class="hidden" accept="png, jpg, jpeg" />
        </label>
    </div>
</section>

<section class="min-h-[full] mt-4 p-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 sm:p-6 dark:bg-gray-800">
    <section class="bg-white dark:bg-gray-900 rounded-lg">
        <div class="px-8 py-12 mx-auto max-w-screen-xl">
            <h2 class="mb-8 text-4xl tracking-tight font-extrabold text-gray-900 dark:text-white">EXIF Informations</h2>
            <div class="mb-10">
                <div class="flex justify-between items-center">
                    <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                        <PromptIcon />
                        <span class="ml-2">Prompt</span>
                    </h3>
                    <button class="flex items-center justify-center p-2 mb-4 font-medium bg-gray-700 text-white border border-transparent  shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded-full">
                        <CopyIcon />
                    </button>
                </div>
                <textarea id="positive" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"></textarea>
            </div>
            <div class="mb-10">
                <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                    <PromptIcon />
                    <span class="ml-2">Negative</span>
                </h3>
                <textarea id="negative" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"></textarea>
            </div>
            <div class="mb-10">
                <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M11.42 15.17 17.25 21A2.652 2.652 0 0 0 21 17.25l-5.877-5.877M11.42 15.17l2.496-3.03c.317-.384.74-.626 1.208-.766M11.42 15.17l-4.655 5.653a2.548 2.548 0 1 1-3.586-3.586l6.837-5.63m5.108-.233c.55-.164 1.163-.188 1.743-.14a4.5 4.5 0 0 0 4.486-6.336l-3.276 3.277a3.004 3.004 0 0 1-2.25-2.25l3.276-3.276a4.5 4.5 0 0 0-6.336 4.486c.091 1.076-.071 2.264-.904 2.95l-.102.085m-1.745 1.437L5.909 7.5H4.5L2.25 3.75l1.5-1.5L7.5 4.5v1.409l4.26 4.26m-1.745 1.437 1.745-1.437m6.615 8.206L15.75 15.75M4.867 19.125h.008v.008h-.008v-.008Z" />
                    </svg>

                    <span class="ml-2">LORA</span>
                </h3>
                <p id="lora" class="text-gray-500 dark:text-gray-400"></p>
            </div>
            <div class="grid pt-8 text-left border-t border-gray-200 md:gap-16 dark:border-gray-700 grid-cols-3">
                <div>
                    <div class="mb-10">
                        <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                            <QuestionIcon />
                            Sampler
                        </h3>
                        <p id="sampler" class="text-gray-500 dark:text-gray-400"></p>
                    </div>
                    <div class="mb-10">
                        <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                            <QuestionIcon />
                            Seed
                        </h3>
                        <p id="seed" class="text-gray-500 dark:text-gray-400"></p>
                    </div>
                </div>
                <div>
                    <div class="mb-10">
                        <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                            <QuestionIcon />
                            CFG scale
                        </h3>
                        <p id="cfg" class="text-gray-500 dark:text-gray-400"></p>
                    </div>
                    <div class="mb-10">
                        <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                            <QuestionIcon />
                            Size
                        </h3>
                        <p id="size" class="text-gray-500 dark:text-gray-400"></p>
                    </div>
                </div>
                <div>
                    <div class="mb-10">
                        <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                            <QuestionIcon />
                            Steps
                        </h3>
                        <p id="steps" class="text-gray-500 dark:text-gray-400"></p>
                    </div>
                    <div class="mb-10">
                        <h3 class="flex items-center mb-4 text-lg font-medium text-gray-900 dark:text-white">
                            <QuestionIcon />
                            Model
                        </h3>
                        <p id="model" class="text-gray-500 dark:text-gray-400"></p>
                    </div>
                </div>
            </div>
        </div>
    </section>
</section>

<script>
    const dropzone = document.getElementById('dropzone-file');
    const dropzoneContent = document.getElementById('dropzone-content');

    // Handle file upload
    dropzone?.addEventListener('change', async (e) => {
        const files = (e.target as HTMLInputElement)?.files;
        if (!files) return;

        const img = document.createElement('img');
        img.src = URL.createObjectURL(files[0]);
        img.className = "w-full h-auto max-h-[600px] object-contain rounded-lg";

        // Clear and add a new image
        if (dropzoneContent) {
            dropzoneContent.innerHTML = '';
            dropzoneContent.appendChild(img);
        }

        const handleWorkflow = async (exif: any) => {
            const parameters = exif.workflow;
            console.log(parameters)
        }

        const handlePrompt = async (exif: any) => {
            const parameters = exif.prompt;

            let metadata = {};
            if(exif.workflow) {
                const nodes = JSON.parse(parameters);
                console.log(nodes)
                Object.keys(nodes).forEach((key) => {
                    const input = nodes[key].inputs;
                    if(input) {
                        Object.keys(input).forEach(entry => {
                            if(entry === "positive") {
                                console.log("positive", input)
                            }
                        });
                    }
                });
            }
        }

        const handlePromptAutomatic = async (exif: any) => {
            const parameters = exif.prompt;

            const metadata: { [key: string]: string } = {
                positive: String(parameters.split('\n')[0]),
                negative: String(parameters.split('Negative prompt:')[1]?.split('Steps')[0]?.trim()),
                sampler: String(parameters.split('Sampler:')[1]?.split(',')[0]?.trim()),
                cfg: String(parameters.split('CFG scale:')[1]?.split(',')[0]?.trim()),
                steps: String(parameters.split('Steps:')[1]?.split(',')[0]?.trim()),
                model: String(parameters.split('Model: ')[1]?.split(',')[0]?.trim()),
                seed: String(parameters.split('Seed:')[1]?.split(',')[0]?.trim()),
                size: String(parameters.split('Size:')[1]?.split(',')[0]?.trim()),
            }

            Object.keys(metadata).forEach((key) => {
                const tag = document.getElementById(key);
                if (tag) tag.innerHTML = metadata[key];
            });
        }

        const exifr = await import('exifr');
        await exifr.parse(files[0]).then((exif) => {
            if(exif.workflow) {
                handleWorkflow(exif);
            }

            if(exif.prompt) {
                handlePrompt(exif);
            }
        });
    });
</script>