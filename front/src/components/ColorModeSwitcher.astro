---
import Sun from "@icons/sun.astro";
import Moon from "@icons/moon.astro";
---

<button id="theme-toggle" data-tooltip-target="tooltip-toggle" type="button" aria-label="Toggle dark mode" class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5">
	<Moon />
	<Sun />
</button>

<div id="tooltip-toggle" role="tooltip" class="absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip">
	Toggle dark mode
	<div class="tooltip-arrow" data-popper-arrow></div>
</div>

<script>
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
    const themeToggleBtn = document.getElementById('theme-toggle');

    const isDarkMode = localStorage.getItem('color-theme') === 'dark' ||
        (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches);

    // Set the initial icon visibility based on the current theme
    themeToggleDarkIcon?.classList.toggle('hidden', isDarkMode);
    themeToggleLightIcon?.classList.toggle('hidden', !isDarkMode);

    themeToggleBtn?.addEventListener('click', () => {
        const isDarkMode = document.documentElement.classList.contains('dark');

        // Toggle the theme and the icons
        document.documentElement.classList.toggle('dark');
        themeToggleDarkIcon?.classList.toggle('hidden');
        themeToggleLightIcon?.classList.toggle('hidden');

        // Save the new theme in localStorage
        localStorage.setItem('color-theme', isDarkMode ? 'light' : 'dark');

        document.dispatchEvent(new Event('dark-mode'));
    });
</script>