---
import LayoutSidebar from '@app/LayoutSidebar.astro';
import Filter from '@icons/Filter.astro';
import Arrow from '@icons/Arrow.astro';

const url = import.meta.env.PUBLIC_API_URL;
async function getImages() {
    try {
        const response = await fetch(`${url}/images`);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return await response.json();
    } catch (error) {
        console.error('Failed to fetch images:', error);
        return [];
    }
}

const images = await getImages();
console.log(images)
---

<LayoutSidebar>
	<div class="px-4 pt-4">
		<section class="p-4 bg-white border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 sm:p-6 dark:bg-gray-800">
			<!-- Card header -->
			<div class="items-center justify-between lg:flex">
				<div class="mb-4 lg:mb-0">
					<h3 class="mb-2 text-xl font-bold text-gray-900 dark:text-white">
						Your Images
					</h3>
					<span class="text-base font-normal text-gray-500 dark:text-gray-400">
						This is the list of all the images you have uploaded.
					</span>
				</div>

				<!-- Filter dropdown -->
				<section class="relative flex gap-4">
					<div id="filters" class="relative">
						<button id="filterDropdownButton" data-dropdown-toggle="filterDropdown"
							class="w-full md:w-auto flex items-center justify-center py-2 px-4 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-primary-700 focus:z-10 focus:ring-4 focus:bg-gray-200 dark:focus:bg-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"
							type="button">
							<Filter />
							Filter
							<Arrow />
						</button>
						<div id="filterDropdown" class="z-10 hidden bg-white rounded-lg shadow dark:bg-gray-700 translate-y-4 absolute right-0 max-w-max p-4 py-4 top-full">
							<h6 class="mb-3 text-sm font-medium text-gray-900 dark:text-white">Model</h6>

							<ul class="space-y-2 text-sm" aria-labelledby="filterDropdownButton">
								<!-- TODO: Add filters -->
							</ul>
						</div>
					</div>
				</section>
			</div>

			<!-- Masonry  TODO: Replace data -->
			<div class="mt-6 columns-2 md:columns-3 lg:columns-4">
				{images.length >= 1 && images.map((image: string) => (
					<div class="relative mb-4 before:content-[''] before:rounded-md before:absolute before:inset-0 before:bg-black before:bg-opacity-20">
						<img class="w-full rounded-md" src={`${url}/${image}`} alt={image} />
						<div class="absolute inset-0 p-8 text-white flex flex-col" onload="this.classList.add('loaded')">
							<div class="relative">
								<a class="absolute inset-0" href="#">
									<h1 class="text-3xl font-bold mb-3">Title</h1>
									<p class="font-sm font-light">Author</p>
								</a>
							</div>
							<div class="mt-auto flex gap-2 flex-wrap">
								<span class="bg-white bg-opacity-90 py-1 px-4 rounded-md text-black">#tag 1</span>
								<span class="bg-white bg-opacity-90 py-1 px-4 rounded-md text-black">#tag 2</span>
							</div>
						</div>
					</div>
				))}
			</div>
			
		</section>
	</div>
</LayoutSidebar>
