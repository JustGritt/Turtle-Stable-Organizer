---
import ColorModeSwitcher from '@components/ColorModeSwitcher.astro';
import HamburgerIcon from '@icons/Hamburger.astro';
import CloseIcon from '@icons/Close.astro';
import BellIcon from '@icons/Bell.astro';
---

<nav class="fixed z-30 w-full bg-white border-b border-gray-200 dark:bg-gray-800 dark:border-gray-700">
	<div class="px-3 py-3 lg:px-5 lg:pl-3">
		<div class="flex items-center justify-between">
			<div class="flex items-center justify-start">
				<button id="toggleSidebarMobile" aria-expanded="true" aria-controls="sidebar"
					class="p-2 text-gray-600 rounded cursor-pointer lg:hidden hover:text-gray-900 hover:bg-gray-100 focus:bg-gray-100 dark:focus:bg-gray-700 focus:ring-2 focus:ring-gray-100 dark:focus:ring-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
					<HamburgerIcon />
					<CloseIcon />
				</button>
				<a href="/" class="flex ml-2 md:mr-24">
					<span class="self-center text-xl font-semibold sm:text-2xl whitespace-nowrap dark:text-white">
						üê¢ Stable Organizer
					</span>
				</a>
			</div>

			<div class="flex items-center">
				<button type="button" data-dropdown-toggle="notification-dropdown"
					class="p-2 mr-2 text-gray-500 rounded-lg hover:text-gray-900 hover:bg-gray-100 dark:text-gray-400 dark:hover:text-white dark:hover:bg-gray-700">
					<span class="sr-only">Check notifications</span>
					<BellIcon />
				</button>
			</div>
		</div>
	</div>
</nav>

<!-- <script type="module">
	// Check localStorage for the theme
	const theme = localStorage.getItem('color-theme');
	const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
	const isDark = theme === 'dark' || (!theme && prefersDark);
	document.documentElement.classList.toggle('dark', isDark);

    const isDarkMode = localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches);
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
    const themeToggleBtn = document.getElementById('theme-toggle');


    // Set the initial icon visibility based on the current theme
    themeToggleDarkIcon?.classList.toggle('hidden', isDarkMode);
    themeToggleLightIcon?.classList.toggle('hidden', !isDarkMode);

    themeToggleBtn?.addEventListener('click', () => {
		const isDarkMode = document.documentElement.classList.contains('dark');

        // Toggle the theme and the icons
        document.documentElement.classList.toggle('dark');
        themeToggleDarkIcon?.classList.toggle('hidden');
        themeToggleLightIcon?.classList.toggle('hidden');

		console.log(isDarkMode)

        // Save the new theme in localStorage
        localStorage.setItem('color-theme', isDarkMode ? 'light' : 'dark');
        document.dispatchEvent(new Event('dark-mode'));
    });
</script> -->